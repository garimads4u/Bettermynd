var jqXHR = null;
function sendFileToServer(formData,status)
{
    
    var uploadURL =SITE_URL+"template/custom_template_file_upload"; //Upload URL
    var extraData ={}; //Extra Data.
    if(jqXHR!=null &&  jqXHR.readyState == 4){
        return false;
    }
    $('.loading-img').show();
    jqXHR=$.ajax({
            xhr: function(data) {
            var xhrobj = $.ajaxSettings.xhr();
            if (xhrobj.upload) {
                    xhrobj.upload.addEventListener('progress', function(event) {
                        var percent = 0;
                        var position = event.loaded || event.position;
                        var total = event.total;
                        if (event.lengthComputable) {
                            percent = Math.ceil(position / total * 100);
                        }
                        //Set progress
//                        status.setProgress(percent);
                    }, false);
                }
            return xhrobj;
        },
    url: uploadURL,
    type: "POST",
    contentType:false,
    processData: false,
        cache: false,
        data: formData,
        complete: function(){
          jqXHR = null;  
        },
        success: function(data){
//        console.log(data);
//            status.setProgress(100);
// 
//            $("#status1").append("File upload Done<br>"); 
            $('.loading-img').hide();
            data = JSON.parse(data);
            if(data.status){
                url =SITE_URL+'/assets/upload/templates/'+data.file;
                $('#files').val('');
                $("<img/>",{
                    load : function(){ 
                        $('#background').val(data.file);
                        canvas.css('width',(this.width)+'px');
                        canvas.css('height',(this.height)+'px');
                        canvas.css('background-image', 'url(' + url + ')');
                        canvas.css('background-size', (this.width)+'px '+(this.height)+'px');//background-size: 80px 60px;
                        $('#width').val(this.width);
                        $('#height').val(this.height);
                        canvas.show();
                        $('#slider').show();
                    },
                    src  : url
                });
$("#errormsg").addClass("hide");
            }else{
				$("#errormsg").removeClass("hide");
				$("#errormsg").text(data.msg);
				window.scroll(0,0);
				if($("#errormsg").hasClass("hide")){
				
				}
				else{
					
				}
            }
        }
    }); 
 
//    status.setAbort(jqXHR);
}
 
var rowCount=0;
function createStatusbar(obj)
{
     rowCount++;
     var row="odd";
     if(rowCount %2 ==0) row ="even";
     this.statusbar = $("<div class='statusbar "+row+"'></div>");
     this.filename = $("<div class='filename'></div>").appendTo(this.statusbar);
     this.size = $("<div class='filesize'></div>").appendTo(this.statusbar);
     this.progressBar = $("<div class='progressBar'><div></div></div>").appendTo(this.statusbar);
     this.abort = $("<div class='abort'>Abort</div>").appendTo(this.statusbar);
     //obj.after(this.statusbar);
 
    this.setFileNameSize = function(name,size)
    {
        var sizeStr="";
        var sizeKB = size/1024;
        if(parseInt(sizeKB) > 1024)
        {
            var sizeMB = sizeKB/1024;
            sizeStr = sizeMB.toFixed(2)+" MB";
        }
        else
        {
            sizeStr = sizeKB.toFixed(2)+" KB";
        }
 
        this.filename.html(name);
        this.size.html(sizeStr);
    }
    this.setProgress = function(progress)
    {       
        var progressBarWidth =progress*this.progressBar.width()/ 100;  
        this.progressBar.find('div').animate({ width: progressBarWidth }, 10).html(progress + "% ");
        if(parseInt(progress) >= 100)
        {
            this.abort.hide();
        }
    }
    this.setAbort = function(jqxhr)
    {
        var sb = this.statusbar;
        this.abort.click(function()
        {
            jqxhr.abort();
            sb.hide();
        });
    }
}
function handleFileUpload(files,obj)
{
   if(files.length>1){
       alert('Upload single file only.');
       return false;
   }
   for (var i = 0; i < files.length; i++) 
   {
        var fd = new FormData();
        fd.append('FileInput', files[i]);
 
        var status = new createStatusbar(obj); //Using this we can set progress.
        status.setFileNameSize(files[i].name,files[i].size);
        sendFileToServer(fd,status);
 
   }
}
$(document).ready(function()
{
var obj = $("#dragandrophandler");
obj.on('dragenter', function (e) 
{
    e.stopPropagation();
    e.preventDefault();
    $(this).css('border', '5px solid #0B85A1');
});
obj.on('dragover', function (e) 
{
     e.stopPropagation();
     e.preventDefault();
});
obj.on('drop', function (e) 
{
     $(this).css('border', '5px dashed rgba(0, 0, 0, 0.2)');
     e.preventDefault();
     var files = e.originalEvent.dataTransfer.files;
      //We need to send dropped files to Server
     handleFileUpload(files,obj);
});
$('#files').on('change', function (e) 
{
    // fileupload
        var fd = new FormData($('#fileupload')[0]);
        sendFileToServer(fd);
});
$(document).on('dragenter', function (e) 
{
    e.stopPropagation();
    e.preventDefault();
});
$(document).on('dragover', function (e) 
{
  e.stopPropagation();
  e.preventDefault();
  obj.css('border', '5px dashed #0B85A1');
});
$(document).on('drop', function (e) 
{
    e.stopPropagation();
    e.preventDefault();
});
 
});